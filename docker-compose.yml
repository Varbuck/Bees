version: '3.8'

services:
  # PostgreSQL
  postgresql:
    image: docker.io/bitnami/postgresql:17
    volumes:
      - './postgresql_data/data:/bitnami/postgresql/data'
    environment:
      - POSTGRESQL_DATABASE=bitnami_airflow
      - POSTGRESQL_USERNAME=bn_airflow
      - POSTGRESQL_PASSWORD=bitnami1
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_UID=1001
      - POSTGRESQL_GID=1001
    networks:
      - spark-network

  # Redis
  redis:
    image: docker.io/bitnami/redis:7.4
    volumes:
      - 'redis_data:/bitnami'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - spark-network

  # Airflow Scheduler
  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    user: root
    environment:
      - AIRFLOW_COMPONENT_TYPE=scheduler
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
    depends_on:
      - postgresql
      - redis
    volumes:
      - ./airflow/dags:/opt/bitnami/airflow/dags
      - ./airflow/logs:/opt/bitnami/airflow/logs
      - ./airflow/plugins:/opt/bitnami/airflow/plugins
    networks:
      - spark-network

  # Airflow Worker
  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile.airflow

    environment:
      - AIRFLOW_COMPONENT_TYPE=worker
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
    depends_on:
      - airflow-scheduler
    # volumes:
    #   - ./airflow/dags:/opt/bitnami/airflow/dags
    #   - ./airflow/logs:/opt/bitnami/airflow/logs
    #   - ./airflow/plugins:/opt/bitnami/airflow/plugins
    networks:
      - spark-network

  # Airflow Webserver
  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    user: root
    environment:
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8081
      - AIRFLOW_USERNAME=admin
      - AIRFLOW_PASSWORD=admin
    ports:
      - '8081:8081'
    depends_on:
      - postgresql
      - redis
    # command: >
    #   bash -c "
    #   airflow db init &&
    #   airflow webserver"
    volumes:
      - ./airflow/dags:/opt/bitnami/airflow/dags
      - ./airflow/logs:/opt/bitnami/airflow/logs
      - ./airflow/plugins:/opt/bitnami/airflow/plugins
      - ./airflow/airflow_settings.yaml:/opt/airflow/airflow_settings.yaml  # Monta o arquivo de configurações

     # - ./airflow/dags/teste_conn.py:/opt/bitnami/airflow/venv/lib/python3.12/site-packages/airflow/example_dags/teste_conn.py
    networks:
      - spark-network

  # Spark Master
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080" # Interface web do Spark Master
      - "7077:7077" # Porta para os workers se conectarem ao master
    volumes:
      - ./scripts:/opt/bitnami/spark/jobs
    networks:
      - spark-network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
    networks:
      - spark-network

volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local

networks:
  spark-network:
    driver: bridge
